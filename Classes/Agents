class GoalInnovations:
  
  '''
	Maintains list of all possible successful recombinations and the compositions that form them.
	'''

class Tribe:
	'''
	A list of tribe members, technologies common to the tribe, technological goals, resources available to the tribe.... 
	Methods for movement, cohesion (members of a tribe inhabiting the same general area), resource use, adding and deleting tribe members.
  '''

	def__init__(self, TribeMemberList, TechnologyList, GroupResource, goals)
		self.TribeMemberList = []
		self.TechnologyList = []
		self.GroupsResource = []
	
	def AddTribeMember (self, Agent):
		'''
		If an agent reproduces, add one agent to 'TribeMemberList.'
		'''
		pass

	def DeleteTribeMember (self, Agent):
		''' 
		If an agent dies delete that agent from 'TribeMemberList.'
		'''
		pass

	def Movement (self, Agent):
		''' 
		A method allowing agents of the same tribe to move similarly across the grid.
		'''
		pass
	
	def Cohesion (self, Agent):
		''' 
		A method that causes agents of the same tribe to occupy the same general grid space.
		'''
		pass

	def ResourceUseRate (self, Agent, Landscape):
		''' 
		A method allowing agents of the same tribe to use resources at the same rate as other tribal members.
		'''
		pass

class Agent:

	'''
	A class that defines methods for communication and exchange between agents of different tribes. Aggregates Tribe.
	Maintains a list of technologies possessed by the agent that are available for exchange.
	'''
	
	def__init__(self, Tribe):
		self.TribeStatus = Tribe
		self.CulturalKnowledge = [] + TechnologyList
	
	def Communication (self, Agent):
		'''
		Stop moving if an agent from another tribe is within a certain range on the grid space. Conditionally override the tribe's movement method.
		''' 
		pass

	def Exchange (self):
		''' 
		Randomly select an item (code string) from each agent's 'CulturalKnowledge.' Copy it and add to the other agent's 'CulturalKnowledge.'
		Iterate over the list and remove duplicates.   
		'''	
		pass

class Innovator (Agent):
	
	'''
	A sub-class of agents able to form innovations from the process of cultural exchange.
	'''
	def__init__(self):
		super().__init__()

	def AttemptInnovation (self, GoalInnovations):
    '''
    After exchange occurs iterate over 'CulturalKnowledge,' look for matches in 'GoalInnovations.'
		'''
		pass

	def Innovate (Self, TechnologyList)
	  ''' 
		Add successful recombinations to 'TechnologyList.' 
		This should give some benefit to all agent's of the tribe, perhaps a decrease in the rate at which a resource is used up.
		'''
		pass
